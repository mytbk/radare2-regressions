#!/bin/sh
# GPL 3+ - Copyright (C) 2011-2013  pancake, Edd Barrett, Simon Ruderich
[ -e tests.sh ] && . ./tests.sh || . ../tests.sh

## "wa" - write opcode

NAME='wa'
FILE=malloc://1024
ARGS='-a x86 -b 32'
CMDS='
"wa nop;mov eax,33"
e asm.profile=simple
pi 2
'
EXPECT='nop
mov eax, 0x21
'
run_test

NAME='wa je 0x33'
FILE=malloc://1024
ARGS='-a x86 -b 32'
CMDS='
wa je 0x33 @ 0x10
pi 1 @ 0x10
'
EXPECT='je 0x33
'
run_test

# wao : modify operation of current opcode
NAME='wao nop (x86)'
FILE=malloc://1024
ARGS='-a x86 -b 64 -e io.cache=1'
CMDS='
wx 31ed4989d15e4889e24883e4f0
pi 5
wao nop
pi 3
'
EXPECT='xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
nop
nop
mov r9, rdx
'
run_test

# wao : modify operation of current opcode
NAME='wao trap (x86)'
FILE=malloc://1024
ARGS='-a x86 -b 64 -e io.cache=1'
CMDS='
wx 31ed4989d15e4889e24883e4f0
pi 5
wao trap
pi 3
'
EXPECT='xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
int3
in eax, dx
mov r9, rdx
'
run_test

# wao : modify operation of current opcode, on ARM
NAME='wao nop (arm)'
FILE=malloc://1024
ARGS='-a arm -b 32 -e io.cache=1'
CMDS='
wx 24c09fe500b0a0e304109de40d20a0e1
pi 4
wao nop
pi 3
'
EXPECT='ldr ip, [pc, 0x24]
mov fp, 0
pop {r1}
mov r2, sp
mov r0, r0
mov fp, 0
pop {r1}
'
run_test

# wao : modify operation of current opcode, on ARM
NAME='wao trap (arm)'
FILE=malloc://1024
ARGS='-a arm -b 32 -e io.cache=1'
CMDS='
wx 24c09fe500b0a0e304109de40d20a0e1
pi 4
wao trap
pi 3
'
EXPECT='ldr ip, [pc, 0x24]
mov fp, 0
pop {r1}
mov r2, sp
trap
mov fp, 0
pop {r1}
'
run_test


## "wx" - write hex value

# Writing of bytes.
NAME='wx'
FILE=malloc://1024
ARGS=
CMDS='
wx 010203
p8 3
'
EXPECT='010203
'
run_test

## "wxf" - write hex pairs from file

NAME='wxf'
FILE=malloc://1024
ARGS=
CMDS='
wxf ../bins/other/hexpairs
p8 4
'
EXPECT='de4db33f
'
run_test

## "wo" - write in block with operation

# Batch adding to bytes works (bug report #59).
NAME='wo'
FILE=malloc://8
ARGS='-w'
CMDS='
wx 0001020304050607
woa 01 @ 0!8
p8 8
woa 01 @ 0!8
p8 8
'
EXPECT='0102030405060708
0203040506070809
'
run_test


## "wt" - write to file

# see bug #503
NAME='wt'
FILE=../bins/pe/b.exe
ARGS=
CMDS='wt a_piece_of_ls_saved_to_PWD 0x400
ls -l a_piece_of_ls_saved_to_PWD~[3]
'
EXPECT='1024
'
EXPECT_ERR='dumped 0x400 bytes
'
FILTER='sed "s/.*\(\<1024\>\).*\(\<a_piece_of_ls_saved_to_PWD\>\)$/\1 \2/"'

run_test
rm -f a_piece_of_ls_saved_to_PWD

NAME='endian tests: wv'
FILE=-
CMDS="e cfg.bigendian=false
e asm.bits=32
wv4 3
p8 4
e cfg.bigendian=true
wv4 3
p8 4
"
EXPECT="03000000
00000003
"
run_test

NAME='wv endian'
FILE=malloc://1024
ARGS=
CMDS='e cfg.bigendian=false
wv4 0x1234
p8 2
wv4 0x12345678
p8 4
'
EXPECT='3412
78563412
'
run_test

NAME='wx 0x should behave like wv? imho nope'
FILE=malloc://1024
BROKEN=1
ARGS=
CMDS='e cfg.bigendian=false
wx 0x1234
p8 2
wx 0x12345678
p8 4
'
EXPECT='3412
78563412
'
run_test

## "wci" - write commits
NAME='wci should commit the changes to the file'
FILE=malloc://1024
BROKEN=1
ARGS=
FILTER="cut -d' '  -f3"
EXPECT='File size'
TMPDIR=$PWD'/.tmp'

PRECMD="
rm -rf '${TMPDIR}' ;
mkdir -p '${TMPDIR}' ;
cp -f ../bins/pe/b.exe '$TMPDIR/.b.exe.orig' ;
cp -f ../bins/pe/b.exe '$TMPDIR/.b.exe.new'
"

CMDS='
e io.cache=true
o+ $TMPDIR/.b.exe.new
wx ff
wci
e.src.null=true
!radiff2 $TMPDIR/.b.exe.orig $TMPDIR/.b.exe.new
'
run_test

NAME='wx pcache'
FILE=../bins/pe/b.exe
BROKEN=
ARGS=
CMDS='
e io.va=0
e io.pcache=true
s 0
ps 2
wx 9090
p8 2
e io.pcache=0
s +1
s 0
ps 2
'
EXPECT='MZ
9090
MZ
'
run_test

NAME='w octal esc'
FILE=malloc://16
ARGS=
CMDS='w 0123456789abcde
w a\57b\0
w 1\0532\0 @ 0x4
w 0\1741\0 @ 0x8
ps
ps @ 0x4
ps @ 0x8
'
EXPECT='a/b
1+2
0|1
'
run_test

## "wen" - insert null bytes

NAME='wen'
FILE=malloc://4
ARGS=
CMDS='
wx 01020304
wen 2 @ 1
wen 1 @ 6
p8 7
'
EXPECT='01000002030400
'
run_test

NAME='wen should insert X null bytes even if io.cache=false'
FILE=--
ARGS=
PRECMD="cp -f ../bins/pe/b.exe .b.exe"
EXPECT='216607
216608
'
CMDS='o+ .b.exe
r
s 0x200
wen 1
r
rm .b.exe
'
run_test

## wxs: write hex and seek

FILE=malloc://1024
NAME="data written after multiple wxs"
IGNORE_ERR=1
CMDS='2 wxs 9090 @ 8
x 16 @ 0'
EXPECT='- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF
0x00000000  0000 0000 0000 0000 9090 9090 0000 0000  ................
'
run_test

FILE=malloc://1024
NAME="address after wxs at tmpseek"
IGNORE_ERR=1
CMDS='2 wxs 9090 @ 8
?vi $$'
EXPECT='0
'
run_test
